type Query {
  hello: String!
}

type Mutation {
  startDream(prompt: String!): ID!
}

type Subscription {
  watchDream(dreamId: ID!): DreamState!
}

type DreamPending {
  complete: Boolean
}

type DreamRunning {
  previewImages: [DreamImage!]!
}

type DreamComplete {
  images: [DreamImage!]!
}

type DreamError {
  errorMessage: String!
}

union DreamState = DreamPending | DreamRunning | DreamComplete | DreamError

type DreamImage {
  imageUri: String!
}
